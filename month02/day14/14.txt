前情回顾

1.  进程回顾
    僵尸进程  孤儿进程

2.  进程间的通信
    socket  消息队列

3.  进程总结

if  __name__ == "__main__":
    q = Queue()
    p = Process(target=func,args=(q,)

4.  聊天室


群聊聊天室
 有人进入聊天室需要输入姓名，姓名不能重复
 有人进入聊天室时，其他人会收到通知：Lucy 进入了聊天室
 一个人发消息，其他人会收到：   Lucy ： 一起出去玩啊。
 有人退出聊天室，则其他人也会收到通知 :  Lucy 退出了聊天室


需求认知 ：  C / S
           使用流程 ： 见图

模块划分 ：   进入聊天室   聊天   退出
            函数

技术点设计： 网络  UDP
           存储：姓名 地址 [(name,address)] {name:address}
           发送接收 ： 转发
                     收发互不影响-》分进程

通信协议设计 （请求不止一种）

                请求类型      数据参数
   进入聊天室     LOGIN         name
   聊天          CHAT        name content
   退出          EXIT          name


具体每个模块逻辑设计--》编码

  搭建框架 ： udp网络循环模型

  进入聊天室
    客户端  输入名字
          发送给服务端
          接收结果--》 是否进程
          是 ： 功能结束
          否 ： 重新回到第一步

    服务端  接收名字
          判断是否可以进入聊天室 （名字是否重复）
          发送结果
          是 ： 给其他人发通知，存储用户信息
          否 ： 功能结束

  聊天  客户端  创建一个子进程
               父进程负责循环发送
               子进程负责循环接收

       服务端  接收客户端请求 简单解析
              将内容转发给其他人



  退出 　客户端　：　发送请求，结束
  　　　　服务端　：　通知其他人　
  　　　　　　　　　　删除用户信息

优化完善



随堂练习：
现在有500张票，存在一个列表中 ["T1",...."T500"]，
10个窗口同时卖这500张票 记为W1-W10

使用10个线程模拟这10个窗口，同时卖票，
直到所有的票都卖出为止，
每出一张票 需要0.1秒，
打印表示即可print("W1----T250")


随堂练习：
创建２个分支线程，一个线程打印1-52这５２个数字
另一个线程打印 A-Z这26个字母
同时启动两个分支线程后要求打印顺序为：
12A34B...5152Z


作业： 1. 进程线程对比
      2. 聊天室 梳理









